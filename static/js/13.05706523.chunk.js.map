{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/register/Register.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","push","unsupportedIterableToArray","TypeError","Register","useState","email","setEmail","password","setPassword","firstname","setFirstname","lastname","setLastname","role","setRole","notification","setNotification","modal","setModal","registered","onFieldChange","event","target","handleResponse","res","console","log","message","document","getElementById","submitLoginInfo","a","fetch","method","headers","body","JSON","stringify","response","json","feedback","className","md","lg","xl","id","type","placeholder","autoComplete","onChange","custom","color","onClick","to","style","textDecoration","show","onClose","closeButton","xs","href"],"mappings":"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","file":"static/js/13.05706523.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CSelect,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [role, setRole] = useState('user');\n  const [notification, setNotification] = useState('');\n  const [modal, setModal] = useState(false);\n  const [registered, setRegistered] = useState(false);\n\n  const onFieldChange = (event) => {\n    if (event.target.name === 'email')\n      setEmail(event.target.value);\n    if (event.target.name === 'password')\n      setPassword(event.target.value);\n    if (event.target.name === 'firstname')\n      setFirstname(event.target.value);\n    if (event.target.name === 'lastname')\n      setLastname(event.target.value);\n    if (event.target.name === 'role')\n      setRole(event.target.value);\n  }\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n    setFirstname('');\n    setLastname('');\n    setRole('user');\n    document.getElementById('email').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('firstname').value = '';\n    document.getElementById('lastname').value = '';\n    document.getElementById('role').value = 'user';\n  }\n\n  const handleResponse = (res) => {\n    console.log(res)\n    if (res.message)\n      setNotification(res.message);\n    clearInputs();\n  }\n\n  const submitLoginInfo = async () => {\n    const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/register`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        firstname: firstname,\n        lastname: lastname,\n        role: role\n      })\n    })\n    const feedback = await response.json();\n    handleResponse(feedback);\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  {/*email input*/}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      onChange={onFieldChange}\n                    />\n                  </CInputGroup>\n                  {/*password input*/}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\"/>\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      onChange={onFieldChange}\n                    />\n                  </CInputGroup>\n                  {/*firstname input*/}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\"/>\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      id=\"firstname\"\n                      name=\"firstname\"\n                      type=\"text\"\n                      placeholder=\"First name\"\n                      autoComplete=\"username\"\n                      onChange={onFieldChange}\n                    />\n                  </CInputGroup>\n                  {/*lastname input*/}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\"/>\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      id=\"lastname\"\n                      name=\"lastname\"\n                      type=\"text\"\n                      placeholder=\"Last name\"\n                      autoComplete=\"username\"\n                      onChange={onFieldChange}\n                    />\n                  </CInputGroup>\n                  {/*role input*/}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\"/>\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CSelect custom name=\"role\" id=\"role\" onChange={onFieldChange}>\n                      <option value=\"user\">Role</option>\n                      <option value=\"user\">User</option>\n                      <option value=\"manager\">Manager</option>\n                      <option value=\"admin\">Admin</option>\n                    </CSelect>\n                  </CInputGroup>\n                  <CButton color=\"success\"\n                           onClick={() => {\n                             setModal(!modal);\n                             submitLoginInfo();\n                           }}\n                  >Create Account</CButton>\n                  <CLink to=\"/login\" style={{textDecoration: \"none\"}} className=\"ml-1\">\n                    <CButton color=\"info\">Login</CButton>\n                  </CLink>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n      {/*Notification Modal*/}\n      <CModal show={modal} onClose={() => {setModal(false)}}>\n        <CModalHeader closeButton>\n          <CModalTitle>Edit Entry</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CCol xs=\"12\">\n            <CCardBody>\n              {notification}\n            </CCardBody>\n          </CCol>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              setModal(false)\n            }}\n            href={registered ? \"#/dashboard\" : \"#\"}\n          >Ok</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Register\n"],"sourceRoot":""}