{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/notification/Notification.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/users/UsersTable.js","views/divisions/CredentialsTable.js","views/divisions/Division.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","F","s","e","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","Notification","modal","setModal","notification","setNotification","hrefCondition","hrefLink","show","onClose","closeButton","xs","color","onClick","href","_slicedToArray","_arr","_n","_d","_s","_i","push","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","iter","cookies","Cookies","token","get","loggedUser","UsersTable","users","divisionID","all","useState","details","setDetails","ouID","setOuID","newUserEmail","setNewUserEmail","updateEmail","setUpdateEmail","updatePassword","setUpdatePassword","updateFirstname","setUpdateFirstname","updateLastname","setUpdateLastname","updateRole","setUpdateRole","adminAccess","role","onFieldChange","event","target","handleResponse","res","message","clearInputs","inputs","document","getElementsByClassName","addUser","a","email","fetch","method","headers","body","JSON","stringify","ou_id","division_id","response","json","feedback","removeUser","item","updateUser","id","_id","password","firstname","lastname","newEmail","newPassword","newFirstname","newLastname","updateUserRole","newRole","filteredUsers","forEach","user","ou","unit","filterUsers","action","row","sm","size","type","className","placeholder","onChange","disabled","items","fields","_style","width","label","sorter","filter","hover","striped","bordered","itemsPerPage","pagination","scopedSlots","index","variant","shape","position","indexOf","newDetails","splice","toggleDetails","includes","custom","CredentialsTable","credentials","newName","setNewName","newLogin","setNewLogin","setNewPassword","updateName","setUpdateName","updateLogin","setUpdateLogin","managerAccess","addCredential","login","updateCredential","Division","match","getData","setState","loaded","getDivision","getUsers","props","params","data","division","fault","setActive","idx","active","divisionAccess","divisionId","userOus","state","style","textAlign","lg","activeTab","onActiveTabChange","Component"],"mappings":"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","file":"static/js/4.30745d75.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react';\nimport {\n  CButton,\n  CCardBody,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle\n} from \"@coreui/react\";\n\nconst Notification = ({modal, setModal, notification, setNotification, hrefCondition, hrefLink}) => {\n  return (\n    <>\n      <CModal show={modal} onClose={() => {\n        setModal(false)\n      }}>\n        <CModalHeader closeButton>\n          <CModalTitle>Edit Entry</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CCol xs=\"12\">\n            <CCardBody>\n              {notification}\n            </CCardBody>\n          </CCol>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={() => {setModal(false); setNotification('');}}\n            href={hrefCondition ? hrefLink : \"#\"}\n          >Ok</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default Notification;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CCollapse,\n  CForm,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CSelect,\n} from \"@coreui/react\";\nimport Cookies from \"universal-cookie\";\nimport Notification from \"../notification/Notification\";\n\nconst cookies = new Cookies();\nconst token = cookies.get('auth-token');\nconst loggedUser = cookies.get('current-user');\n\nconst UsersTable = ({users, divisionID, all}) => {\n  const [details, setDetails] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [ouID, setOuID] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [updateEmail, setUpdateEmail] = useState('');\n  const [updatePassword, setUpdatePassword] = useState('');\n  const [updateFirstname, setUpdateFirstname] = useState('');\n  const [updateLastname, setUpdateLastname] = useState('');\n  const [updateRole, setUpdateRole] = useState('user')\n  const [notification, setNotification] = useState('');\n  const adminAccess = (loggedUser.role === 'admin');\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const fields = [\n    {key: 'email', _style: {width: '17%'}},\n    {key: 'password', _style: {width: '50%'}},\n    {key: 'firstname', _style: {width: '10%'}},\n    {key: 'lastname', _style: {width: '10%'}},\n    {key: 'role', _style: {width: '10%'}},\n    {\n      key: 'show_details',\n      label: '',\n      _style: {width: '1%'},\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const onFieldChange = (event) => {\n    if (event.target.name === 'new-user-email')\n      setNewUserEmail(event.target.value);\n    if (event.target.name === 'update-email')\n      setUpdateEmail(event.target.value);\n    if (event.target.name === 'update-password')\n      setUpdatePassword(event.target.value);\n    if (event.target.name === 'update-firstname')\n      setUpdateFirstname(event.target.value);\n    if (event.target.name === 'update-lastname')\n      setUpdateLastname(event.target.value);\n    if (event.target.name === 'update-role')\n      setUpdateRole(event.target.value);\n  }\n\n  const handleResponse = (res) => {\n    if (res.message)\n      setNotification(res.message);\n    clearInputs();\n  }\n\n  const clearInputs = () => {\n    setNewUserEmail('');\n    setUpdateEmail('');\n    setUpdatePassword('')\n    setUpdateFirstname('');\n    setUpdateLastname('');\n    const inputs = document.getElementsByClassName('input-field');\n    for (const input of inputs) {\n      input.value = '';\n    }\n  }\n\n  const filterUsers = () => {\n    let filteredUsers = [];\n    if (!divisionID) {\n      filteredUsers = users;\n      return filteredUsers;\n    } else {\n      users.forEach((user) => {\n        user.ou.forEach((unit) => {\n          if (unit.division_id === divisionID) {\n            if (ouID === '')\n              setOuID(unit.ou_id);\n            filteredUsers.push(user);\n          }\n        })\n      })\n      return filteredUsers;\n    }\n  }\n\n  const addUser = async () => {\n    if (newUserEmail !== '') {\n      const email = newUserEmail;\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/users/add/division`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          email: email,\n          ou_id: ouID,\n          division_id: divisionID\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to enter a email before adding.'}\n      handleResponse(feedback);\n    }\n  }\n\n  const removeUser = async (item) => {\n    if (item) {\n      const email = item.email;\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/users/remove/division`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          email: email,\n          ou_id: ouID,\n          division_id: divisionID\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to select a user.'}\n      handleResponse(feedback);\n    }\n  }\n\n  const updateUser = async (item) => {\n    if (updateEmail !== '' || updatePassword !== '' || updateFirstname !== '' || updateLastname !== '') {\n      const id = item._id;\n      const email = item.email;\n      const password = item.password;\n      const firstname = item.firstname;\n      const lastname = item.lastname;\n\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/users/update/details`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          id: id,\n          email: email,\n          password: password,\n          firstname: firstname,\n          lastname: lastname,\n          newEmail: updateEmail,\n          newPassword: updatePassword,\n          newFirstname: updateFirstname,\n          newLastname: updateLastname,\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to fill at least one field before updating.'}\n      handleResponse(feedback);\n    }\n  }\n\n  const updateUserRole = async (item) => {\n    if (item) {\n      const id = item._id;\n      const role = item.role;\n\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/users/update/role`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          id: id,\n          role: role,\n          newRole: updateRole\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to select a user.'}\n      handleResponse(feedback);\n    }\n  }\n\n  const filteredUsers = filterUsers();\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            {all ? null : (\n              <CCardHeader>\n                <CForm action=\"\" method=\"POST\">\n                  <CFormGroup row>\n                    <CCol sm=\"6\">\n                      <CInput size=\"sm\" type=\"email\" id=\"new-user-email\" name=\"new-user-email\"\n                              className=\"input-sm input-field\"\n                              placeholder=\"New user email\"\n                              onChange={onFieldChange}/>\n                      {/*<CInputGroup className=\"input-sm input-field\">*/}\n                      {/*  <CSelect size=\"sm\" custom name=\"new-role\" id=\"new-role\" onChange={onFieldChange}>*/}\n                      {/*    <option value=\"user\">Role</option>*/}\n                      {/*    <option value=\"user\">User</option>*/}\n                      {/*    <option value=\"manager\">Manager</option>*/}\n                      {/*    <option value=\"admin\">Admin</option>*/}\n                      {/*  </CSelect>*/}\n                      {/*</CInputGroup>*/}\n                    </CCol>\n                  </CFormGroup>\n                </CForm>\n                {(adminAccess ?\n                    <CButton\n                      size=\"sm\"\n                      color=\"success\"\n                      onClick={() => {\n                        addUser();\n                        setModal(!modal);\n                      }}\n                    >Add user</CButton> :\n                    <CButton size=\"sm\" color=\"success\" disabled>Add user</CButton>\n                )}\n              </CCardHeader>\n            )}\n            <CCardBody>\n              <CDataTable\n                items={filteredUsers}\n                fields={fields}\n                hover\n                striped\n                bordered\n                size=\"sm\"\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  'show_details':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              toggleDetails(index)\n                            }}\n                          >\n                            {details.includes(index) ? 'Hide' : 'Show'}\n                          </CButton>\n                        </td>\n                      )\n                    },\n                  'details':\n                    (item, index) => {\n                      return (\n                        <CCollapse show={details.includes(index)}>\n                          <CCardBody>\n                            <CForm action=\"\" method=\"PATCH\">\n                              <CFormGroup row>\n                                <CCol sm=\"5\">\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-email\" className=\"input-sm input-field\"\n                                          placeholder=\"Update email\"\n                                          onChange={onFieldChange}/>\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-password\" className=\"input-sm input-field\"\n                                          placeholder=\"Update password\"\n                                          onChange={onFieldChange}/>\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-firstname\"\n                                          className=\"input-sm input-field\"\n                                          placeholder=\"Update first name\" onChange={onFieldChange}/>\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-lastname\" className=\"input-sm input-field\"\n                                          placeholder=\"Update last name\"\n                                          onChange={onFieldChange}/>\n                                </CCol>\n                                {all ?\n                                  <CCol sm=\"4\">\n                                    <CInputGroup className=\"input-sm input-field\">\n                                      <CSelect size=\"sm\" custom name=\"update-role\" id=\"update-role\" onChange={onFieldChange}>\n                                        <option value=\"user\">Role</option>\n                                        <option value=\"user\">User</option>\n                                        <option value=\"manager\">Manager</option>\n                                        <option value=\"admin\">Admin</option>\n                                      </CSelect>\n                                    </CInputGroup>\n                                  </CCol>\n                                  : null\n                                }\n                              </CFormGroup>\n                            </CForm>\n                            {adminAccess ?\n                              <CButton\n                                size=\"sm\"\n                                color=\"warning\"\n                                onClick={() => {\n                                  updateUser(item);\n                                  setModal(!modal);\n                                }}\n                              >Edit</CButton> :\n                              <CButton size=\"sm\" color=\"warning\" disabled>Edit</CButton>\n                            }\n                            {all ?\n                              (adminAccess ?\n                                  <CButton\n                                    size=\"sm\"\n                                    color=\"warning\"\n                                    className=\"ml-1\"\n                                    onClick={() => {\n                                      updateUserRole(item);\n                                      setModal(!modal);\n                                    }}>\n                                    Update Role\n                                  </CButton>\n                                  :\n                                  <CButton\n                                    size=\"sm\"\n                                    color=\"warning\"\n                                    className=\"ml-1\"\n                                    disabled>\n                                    Update Role\n                                  </CButton>\n                              ) :\n                              <CButton\n                                size=\"sm\"\n                                color=\"danger\"\n                                className=\"ml-1\"\n                                onClick={() => {\n                                  removeUser(item);\n                                  setModal(!modal);\n                                }}>\n                                Remove\n                              </CButton>\n                            }\n                          </CCardBody>\n                        </CCollapse>\n                      )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <Notification\n        modal={modal}\n        setModal={setModal}\n        notification={notification}\n        setNotification={setNotification}\n        hrefCondition={true}\n        hrefLink={'#'}/>\n    </>\n  );\n}\n\nexport default UsersTable;\n","import React, {useEffect, useState} from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CCollapse,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput\n} from \"@coreui/react\";\nimport Notification from \"../notification/Notification\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get('auth-token');\nconst user = cookies.get('current-user');\n\nconst CredentialsTable = ({credentials, divisionID}) => {\n  const [details, setDetails] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [updateName, setUpdateName] = useState('');\n  const [updateLogin, setUpdateLogin] = useState('');\n  const [updatePassword, setUpdatePassword] = useState('');\n  const [notification, setNotification] = useState('');\n  const [modal, setModal] = useState(false);\n  const managerAccess = ((user.role === 'manager') || (user.role === 'admin'));\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const fields = [\n    {key: 'name', _style: {width: '30%'}},\n    {key: 'login', _style: {width: '25%'}},\n    {key: 'password', _style: {width: '25%'}},\n    {\n      key: 'show_details',\n      label: '',\n      _style: {width: '1%'},\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const onFieldChange = (event) => {\n    if (event.target.name === 'new-name')\n      setNewName(event.target.value);\n    if (event.target.name === 'new-login')\n      setNewLogin(event.target.value);\n    if (event.target.name === 'new-password')\n      setNewPassword(event.target.value);\n    if (event.target.name === 'update-name')\n      setUpdateName(event.target.value);\n    if (event.target.name === 'update-login')\n      setUpdateLogin(event.target.value);\n    if (event.target.name === 'update-password')\n      setUpdatePassword(event.target.value);\n  }\n\n  const handleResponse = (res) => {\n    if (res.message)\n      setNotification(res.message);\n    clearInputs();\n  }\n\n  const clearInputs = () => {\n    setNewName('');\n    setNewLogin('')\n    setNewPassword('');\n    setUpdateName('');\n    setUpdateLogin('')\n    setUpdatePassword('');\n    const inputs = document.getElementsByClassName('input-field');\n    for (const input of inputs) {\n      input.value = '';\n    }\n  }\n\n  const addCredential = async () => {\n    if (newName !== '' && newLogin !== '' && newPassword !== '') {\n      const id = divisionID;\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/divisions/add/credentials/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          name: newName,\n          login: newLogin,\n          password: newPassword\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to fill in all fields before adding.'}\n      handleResponse(feedback);\n    }\n  }\n\n  const updateCredential = async (item) => {\n    if (updateName !== '' || updateLogin !== '' || updatePassword !== '') {\n      const name = item.name;\n      const login = item.login;\n      const password = item.password;\n      const id = divisionID;\n\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/divisions/update/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          name: name,\n          login: login,\n          password: password,\n          newName: updateName,\n          newLogin: updateLogin,\n          newPassword: updatePassword\n        })\n      })\n      const feedback = await response.json();\n      handleResponse(feedback);\n    } else {\n      const feedback = {message: 'You need to fill at least one field before updating.'}\n      handleResponse(feedback);\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <CForm action=\"\" method=\"POST\">\n                <CFormGroup row>\n                  <CCol sm=\"6\">\n                    <CInput size=\"sm\" type=\"text\" id=\"new-name\" name=\"new-name\" className=\"input-sm input-field\"\n                            placeholder=\"New name\"\n                            onChange={onFieldChange}/>\n                    <CInput size=\"sm\" type=\"text\" id=\"new-login\" name=\"new-login\" className=\"input-sm input-field\"\n                            placeholder=\"new login\"\n                            onChange={onFieldChange}/>\n                    <CInput size=\"sm\" type=\"text\" id=\"new-password\" name=\"new-password\" className=\"input-sm input-field\"\n                            placeholder=\"New password\" onChange={onFieldChange}/>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n              <CButton color=\"success\" size=\"sm\" onClick={() => {\n                addCredential();\n                setModal(!modal);\n              }}>Add credential</CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={credentials}\n                fields={fields}\n                hover\n                striped\n                bordered\n                size=\"sm\"\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  'show_details':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              toggleDetails(index)\n                            }}\n                          >\n                            {details.includes(index) ? 'Hide' : 'Show'}\n                          </CButton>\n                        </td>\n                      )\n                    },\n                  'details':\n                    (item, index) => {\n                      return (\n                        <CCollapse show={details.includes(index)}>\n                          <CCardBody>\n                            <CForm action=\"\" method=\"PATCH\">\n                              <CFormGroup row>\n                                <CCol sm=\"6\">\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-name\" className=\"input-sm input-field\"\n                                          placeholder=\"Update name\"\n                                          onChange={onFieldChange}/>\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-login\" className=\"input-sm input-field\"\n                                          placeholder=\"Update login\"\n                                          onChange={onFieldChange}/>\n                                  <CInput size=\"sm\" type=\"text\" name=\"update-password\"\n                                          className=\"input-sm input-field\"\n                                          placeholder=\"Update password\" onChange={onFieldChange}/>\n                                </CCol>\n                              </CFormGroup>\n                            </CForm>\n                            {managerAccess ?\n                              <CButton\n                                size=\"sm\"\n                                color=\"warning\"\n                                onClick={() => {\n                                  updateCredential(item);\n                                  setModal(!modal);\n                                }}\n                              >Edit</CButton> :\n                              <CButton size=\"sm\" color=\"warning\" disabled>Edit</CButton>\n                            }\n                            <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" disabled>\n                              Delete\n                            </CButton>\n                          </CCardBody>\n                        </CCollapse>\n                      )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <Notification\n        modal={modal}\n        setModal={setModal}\n        notification={notification}\n        setNotification={setNotification}\n        hrefCondition={true}\n        hrefLink={'#'}/>\n    </>\n  );\n}\n\nexport default CredentialsTable;\n","import React, {Component} from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CRow,\n  CTabContent,\n  CTabPane,\n  CTabs\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport UsersTable from \"../users/UsersTable\";\nimport CredentialsTable from \"./CredentialsTable\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get('auth-token');\nconst user = cookies.get('current-user');\n\nclass Division extends Component {\n  constructor({match}) {\n    super({match});\n    this.state = {\n      active: 0,\n      division: [],\n      users: [],\n      loaded: false,\n      fault: false\n    }\n  }\n\n  async componentDidMount() {\n    await this.getData();\n  }\n\n  // componentDidUpdate = async (prevProps, prevState) => {\n  //   if (prevState.division !== this.state.division) {\n  //     await this.getData();\n  //   }\n  // }\n\n  getData = async () => {\n    this.setState({loaded: false});\n    await this.getDivision();\n    await this.getUsers();\n    this.setState({loaded: true});\n  }\n\n  getDivision = async () => {\n    try {\n      const id = this.props.match.params.id;\n      const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/divisions/find/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        }\n      })\n      const data = await response.json();\n      this.setState({division: data});\n    } catch (err) {\n      this.setState({fault: true});\n    }\n  }\n\n  getUsers = async () => {\n    const response = await fetch(`https://stepbot-cooltech-internal-api.herokuapp.com/users/find/all`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': token\n      }\n    })\n    const data = await response.json();\n    this.setState({users: data});\n  }\n\n  setActive = (idx) => {\n    this.setState({active: idx})\n  }\n\n  divisionAccess = (divisionId, user) => {\n    if (user) {\n      const userOus = user.ou;\n      for (const ou of userOus) {\n        if (ou.division_id === divisionId)\n          return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    const {division, users, loaded, fault} = this.state;\n    const credentials = (division ? division.credentials : []);\n    const divisionID = (division ? division._id : '');\n    return (\n      <>\n        {(fault) ? <h1 style={{textAlign: \"center\"}}>A fault occurred.</h1> :\n          (this.divisionAccess(divisionID, user)) ?\n            <CRow>\n              <CCol lg={12}>\n                <CCard>\n                  <CCardHeader>\n                    <h4>ID: {division._id}</h4>\n                    <h4>{division.name}</h4>\n                  </CCardHeader>\n                  <CCardBody>\n                    {loaded ?\n                      (\n                        <CTabs activeTab={this.state.active} onActiveTabChange={idx => this.setActive(idx)}>\n                          <CNav variant=\"tabs\">\n                            <CNavItem>\n                              <CNavLink>\n                                <CIcon name=\"cil-list-rich\"/>\n                                {this.state.active === 0 && ' Credentials'}\n                              </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                              <CNavLink>\n                                <CIcon name=\"cil-people\"/>\n                                {this.state.active === 1 && ' Users'}\n                              </CNavLink>\n                            </CNavItem>\n                          </CNav>\n\n                          <CTabContent>\n\n                            <CTabPane>\n                              <CredentialsTable credentials={credentials} divisionID={divisionID}/>\n                            </CTabPane>\n\n                            <CTabPane>\n                              <UsersTable users={users} divisionID={divisionID} all={false}/>\n                            </CTabPane>\n\n                          </CTabContent>\n                        </CTabs>\n                      ) :\n                      <p>Loading...</p>\n                    }\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n            : <h1 style={{textAlign: \"center\"}}>Access denied.</h1>\n        }\n      </>\n    );\n  }\n}\n\nexport default Division\n"],"sourceRoot":""}